/* 
 * Contratti API V1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// AooModuloIxCeRequest
    /// </summary>
    [DataContract]
    public partial class AooModuloIxCeRequest :  IEquatable<AooModuloIxCeRequest>, IValidatableObject
    {
        /// <summary>
        /// Defines TipoFirma
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TipoFirmaEnum
        {
            
            /// <summary>
            /// Enum NESSUNA for value: NESSUNA
            /// </summary>
            [EnumMember(Value = "NESSUNA")]
            NESSUNA = 1,
            
            /// <summary>
            /// Enum AUTOMATICAINTERMEDIARIO for value: AUTOMATICA_INTERMEDIARIO
            /// </summary>
            [EnumMember(Value = "AUTOMATICA_INTERMEDIARIO")]
            AUTOMATICAINTERMEDIARIO = 2,
            
            /// <summary>
            /// Enum AUTOMATICAMITTENTE for value: AUTOMATICA_MITTENTE
            /// </summary>
            [EnumMember(Value = "AUTOMATICA_MITTENTE")]
            AUTOMATICAMITTENTE = 3,
            
            /// <summary>
            /// Enum MANUALEMITTENTE for value: MANUALE_MITTENTE
            /// </summary>
            [EnumMember(Value = "MANUALE_MITTENTE")]
            MANUALEMITTENTE = 4
        }

        /// <summary>
        /// Gets or Sets TipoFirma
        /// </summary>
        [DataMember(Name="tipoFirma", EmitDefaultValue=false)]
        public TipoFirmaEnum TipoFirma { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AooModuloIxCeRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AooModuloIxCeRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AooModuloIxCeRequest" /> class.
        /// </summary>
        /// <param name="fascia">fascia.</param>
        /// <param name="fasciaAnniSuccessiva">fasciaAnniSuccessiva.</param>
        /// <param name="tipoFirma">tipoFirma (required).</param>
        /// <param name="responsabileConservazione">responsabileConservazione.</param>
        /// <param name="periodoImposta">periodoImposta.</param>
        public AooModuloIxCeRequest(FasciaIxCeInfo fascia = default(FasciaIxCeInfo), FasciaIxCeInfo fasciaAnniSuccessiva = default(FasciaIxCeInfo), TipoFirmaEnum tipoFirma = default(TipoFirmaEnum), ResponsabileConservazioneInfo responsabileConservazione = default(ResponsabileConservazioneInfo), PeriodoImpostaInfo periodoImposta = default(PeriodoImpostaInfo))
        {
            // to ensure "tipoFirma" is required (not null)
            if (tipoFirma == null)
            {
                throw new InvalidDataException("tipoFirma is a required property for AooModuloIxCeRequest and cannot be null");
            }
            else
            {
                this.TipoFirma = tipoFirma;
            }
            this.Fascia = fascia;
            this.FasciaAnniSuccessiva = fasciaAnniSuccessiva;
            this.ResponsabileConservazione = responsabileConservazione;
            this.PeriodoImposta = periodoImposta;
        }
        
        /// <summary>
        /// Gets or Sets Fascia
        /// </summary>
        [DataMember(Name="fascia", EmitDefaultValue=false)]
        public FasciaIxCeInfo Fascia { get; set; }

        /// <summary>
        /// Gets or Sets FasciaAnniSuccessiva
        /// </summary>
        [DataMember(Name="fasciaAnniSuccessiva", EmitDefaultValue=false)]
        public FasciaIxCeInfo FasciaAnniSuccessiva { get; set; }


        /// <summary>
        /// Gets or Sets ResponsabileConservazione
        /// </summary>
        [DataMember(Name="responsabileConservazione", EmitDefaultValue=false)]
        public ResponsabileConservazioneInfo ResponsabileConservazione { get; set; }

        /// <summary>
        /// Gets or Sets PeriodoImposta
        /// </summary>
        [DataMember(Name="periodoImposta", EmitDefaultValue=false)]
        public PeriodoImpostaInfo PeriodoImposta { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AooModuloIxCeRequest {\n");
            sb.Append("  Fascia: ").Append(Fascia).Append("\n");
            sb.Append("  FasciaAnniSuccessiva: ").Append(FasciaAnniSuccessiva).Append("\n");
            sb.Append("  TipoFirma: ").Append(TipoFirma).Append("\n");
            sb.Append("  ResponsabileConservazione: ").Append(ResponsabileConservazione).Append("\n");
            sb.Append("  PeriodoImposta: ").Append(PeriodoImposta).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AooModuloIxCeRequest);
        }

        /// <summary>
        /// Returns true if AooModuloIxCeRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of AooModuloIxCeRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AooModuloIxCeRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Fascia == input.Fascia ||
                    (this.Fascia != null &&
                    this.Fascia.Equals(input.Fascia))
                ) && 
                (
                    this.FasciaAnniSuccessiva == input.FasciaAnniSuccessiva ||
                    (this.FasciaAnniSuccessiva != null &&
                    this.FasciaAnniSuccessiva.Equals(input.FasciaAnniSuccessiva))
                ) && 
                (
                    this.TipoFirma == input.TipoFirma ||
                    (this.TipoFirma != null &&
                    this.TipoFirma.Equals(input.TipoFirma))
                ) && 
                (
                    this.ResponsabileConservazione == input.ResponsabileConservazione ||
                    (this.ResponsabileConservazione != null &&
                    this.ResponsabileConservazione.Equals(input.ResponsabileConservazione))
                ) && 
                (
                    this.PeriodoImposta == input.PeriodoImposta ||
                    (this.PeriodoImposta != null &&
                    this.PeriodoImposta.Equals(input.PeriodoImposta))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Fascia != null)
                    hashCode = hashCode * 59 + this.Fascia.GetHashCode();
                if (this.FasciaAnniSuccessiva != null)
                    hashCode = hashCode * 59 + this.FasciaAnniSuccessiva.GetHashCode();
                if (this.TipoFirma != null)
                    hashCode = hashCode * 59 + this.TipoFirma.GetHashCode();
                if (this.ResponsabileConservazione != null)
                    hashCode = hashCode * 59 + this.ResponsabileConservazione.GetHashCode();
                if (this.PeriodoImposta != null)
                    hashCode = hashCode * 59 + this.PeriodoImposta.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
