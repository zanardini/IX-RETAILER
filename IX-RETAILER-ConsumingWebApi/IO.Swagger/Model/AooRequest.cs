/* 
 * Contratti API V1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// AooRequest
    /// </summary>
    [DataContract]
    public partial class AooRequest :  IEquatable<AooRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AooRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AooRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AooRequest" /> class.
        /// </summary>
        /// <param name="sedeLegale">sedeLegale (required).</param>
        /// <param name="datiFiscali">datiFiscali (required).</param>
        /// <param name="legaleRappresentante">legaleRappresentante (required).</param>
        public AooRequest(SedeLegaleAoo sedeLegale = default(SedeLegaleAoo), DatiFiscaliAoo datiFiscali = default(DatiFiscaliAoo), LegaleRappresentanteAoo legaleRappresentante = default(LegaleRappresentanteAoo))
        {
            // to ensure "sedeLegale" is required (not null)
            if (sedeLegale == null)
            {
                throw new InvalidDataException("sedeLegale is a required property for AooRequest and cannot be null");
            }
            else
            {
                this.SedeLegale = sedeLegale;
            }
            // to ensure "datiFiscali" is required (not null)
            if (datiFiscali == null)
            {
                throw new InvalidDataException("datiFiscali is a required property for AooRequest and cannot be null");
            }
            else
            {
                this.DatiFiscali = datiFiscali;
            }
            // to ensure "legaleRappresentante" is required (not null)
            if (legaleRappresentante == null)
            {
                throw new InvalidDataException("legaleRappresentante is a required property for AooRequest and cannot be null");
            }
            else
            {
                this.LegaleRappresentante = legaleRappresentante;
            }
        }
        
        /// <summary>
        /// Gets or Sets SedeLegale
        /// </summary>
        [DataMember(Name="sedeLegale", EmitDefaultValue=false)]
        public SedeLegaleAoo SedeLegale { get; set; }

        /// <summary>
        /// Gets or Sets DatiFiscali
        /// </summary>
        [DataMember(Name="datiFiscali", EmitDefaultValue=false)]
        public DatiFiscaliAoo DatiFiscali { get; set; }

        /// <summary>
        /// Gets or Sets LegaleRappresentante
        /// </summary>
        [DataMember(Name="legaleRappresentante", EmitDefaultValue=false)]
        public LegaleRappresentanteAoo LegaleRappresentante { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AooRequest {\n");
            sb.Append("  SedeLegale: ").Append(SedeLegale).Append("\n");
            sb.Append("  DatiFiscali: ").Append(DatiFiscali).Append("\n");
            sb.Append("  LegaleRappresentante: ").Append(LegaleRappresentante).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AooRequest);
        }

        /// <summary>
        /// Returns true if AooRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of AooRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AooRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SedeLegale == input.SedeLegale ||
                    (this.SedeLegale != null &&
                    this.SedeLegale.Equals(input.SedeLegale))
                ) && 
                (
                    this.DatiFiscali == input.DatiFiscali ||
                    (this.DatiFiscali != null &&
                    this.DatiFiscali.Equals(input.DatiFiscali))
                ) && 
                (
                    this.LegaleRappresentante == input.LegaleRappresentante ||
                    (this.LegaleRappresentante != null &&
                    this.LegaleRappresentante.Equals(input.LegaleRappresentante))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SedeLegale != null)
                    hashCode = hashCode * 59 + this.SedeLegale.GetHashCode();
                if (this.DatiFiscali != null)
                    hashCode = hashCode * 59 + this.DatiFiscali.GetHashCode();
                if (this.LegaleRappresentante != null)
                    hashCode = hashCode * 59 + this.LegaleRappresentante.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
