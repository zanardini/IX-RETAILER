/* 
 * Contratti API V2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ClienteStandardResponse
    /// </summary>
    [DataContract]
    public partial class ClienteStandardResponse :  IEquatable<ClienteStandardResponse>, IValidatableObject
    {
        /// <summary>
        /// Defines ValidazionePartitaIva
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ValidazionePartitaIvaEnum
        {
            
            /// <summary>
            /// Enum VALIDA for value: VALIDA
            /// </summary>
            [EnumMember(Value = "VALIDA")]
            VALIDA = 1,
            
            /// <summary>
            /// Enum NONVALIDA for value: NON_VALIDA
            /// </summary>
            [EnumMember(Value = "NON_VALIDA")]
            NONVALIDA = 2,
            
            /// <summary>
            /// Enum NONVERIFICATA for value: NON_VERIFICATA
            /// </summary>
            [EnumMember(Value = "NON_VERIFICATA")]
            NONVERIFICATA = 3
        }

        /// <summary>
        /// Gets or Sets ValidazionePartitaIva
        /// </summary>
        [DataMember(Name="validazionePartitaIva", EmitDefaultValue=false)]
        public ValidazionePartitaIvaEnum? ValidazionePartitaIva { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ClienteStandardResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ClienteStandardResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ClienteStandardResponse" /> class.
        /// </summary>
        /// <param name="identificativoCliente">identificativoCliente (required).</param>
        /// <param name="identificativoAoo">identificativoAoo (required).</param>
        /// <param name="validazionePartitaIva">validazionePartitaIva.</param>
        /// <param name="ragioneSociale">ragioneSociale.</param>
        public ClienteStandardResponse(string identificativoCliente = default(string), string identificativoAoo = default(string), ValidazionePartitaIvaEnum? validazionePartitaIva = default(ValidazionePartitaIvaEnum?), string ragioneSociale = default(string))
        {
            // to ensure "identificativoCliente" is required (not null)
            if (identificativoCliente == null)
            {
                throw new InvalidDataException("identificativoCliente is a required property for ClienteStandardResponse and cannot be null");
            }
            else
            {
                this.IdentificativoCliente = identificativoCliente;
            }
            // to ensure "identificativoAoo" is required (not null)
            if (identificativoAoo == null)
            {
                throw new InvalidDataException("identificativoAoo is a required property for ClienteStandardResponse and cannot be null");
            }
            else
            {
                this.IdentificativoAoo = identificativoAoo;
            }
            this.ValidazionePartitaIva = validazionePartitaIva;
            this.RagioneSociale = ragioneSociale;
        }
        
        /// <summary>
        /// Gets or Sets IdentificativoCliente
        /// </summary>
        [DataMember(Name="IdentificativoCliente", EmitDefaultValue=false)]
        public string IdentificativoCliente { get; set; }

        /// <summary>
        /// Gets or Sets IdentificativoAoo
        /// </summary>
        [DataMember(Name="identificativoAoo", EmitDefaultValue=false)]
        public string IdentificativoAoo { get; set; }


        /// <summary>
        /// Gets or Sets RagioneSociale
        /// </summary>
        [DataMember(Name="ragioneSociale", EmitDefaultValue=false)]
        public string RagioneSociale { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ClienteStandardResponse {\n");
            sb.Append("  IdentificativoCliente: ").Append(IdentificativoCliente).Append("\n");
            sb.Append("  IdentificativoAoo: ").Append(IdentificativoAoo).Append("\n");
            sb.Append("  ValidazionePartitaIva: ").Append(ValidazionePartitaIva).Append("\n");
            sb.Append("  RagioneSociale: ").Append(RagioneSociale).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ClienteStandardResponse);
        }

        /// <summary>
        /// Returns true if ClienteStandardResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ClienteStandardResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ClienteStandardResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.IdentificativoCliente == input.IdentificativoCliente ||
                    (this.IdentificativoCliente != null &&
                    this.IdentificativoCliente.Equals(input.IdentificativoCliente))
                ) && 
                (
                    this.IdentificativoAoo == input.IdentificativoAoo ||
                    (this.IdentificativoAoo != null &&
                    this.IdentificativoAoo.Equals(input.IdentificativoAoo))
                ) && 
                (
                    this.ValidazionePartitaIva == input.ValidazionePartitaIva ||
                    (this.ValidazionePartitaIva != null &&
                    this.ValidazionePartitaIva.Equals(input.ValidazionePartitaIva))
                ) && 
                (
                    this.RagioneSociale == input.RagioneSociale ||
                    (this.RagioneSociale != null &&
                    this.RagioneSociale.Equals(input.RagioneSociale))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.IdentificativoCliente != null)
                    hashCode = hashCode * 59 + this.IdentificativoCliente.GetHashCode();
                if (this.IdentificativoAoo != null)
                    hashCode = hashCode * 59 + this.IdentificativoAoo.GetHashCode();
                if (this.ValidazionePartitaIva != null)
                    hashCode = hashCode * 59 + this.ValidazionePartitaIva.GetHashCode();
                if (this.RagioneSociale != null)
                    hashCode = hashCode * 59 + this.RagioneSociale.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
