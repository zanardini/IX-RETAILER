/* 
 * Contratti API V2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ClienteV2
    /// </summary>
    [DataContract]
    public partial class ClienteV2 :  IEquatable<ClienteV2>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ClienteV2" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ClienteV2() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ClienteV2" /> class.
        /// </summary>
        /// <param name="identificativo">identificativo (required).</param>
        /// <param name="partitaiva">partitaiva (required).</param>
        /// <param name="ragioneSociale">ragioneSociale (required).</param>
        public ClienteV2(string identificativo = default(string), string partitaiva = default(string), string ragioneSociale = default(string))
        {
            // to ensure "identificativo" is required (not null)
            if (identificativo == null)
            {
                throw new InvalidDataException("identificativo is a required property for ClienteV2 and cannot be null");
            }
            else
            {
                this.Identificativo = identificativo;
            }
            // to ensure "partitaiva" is required (not null)
            if (partitaiva == null)
            {
                throw new InvalidDataException("partitaiva is a required property for ClienteV2 and cannot be null");
            }
            else
            {
                this.Partitaiva = partitaiva;
            }
            // to ensure "ragioneSociale" is required (not null)
            if (ragioneSociale == null)
            {
                throw new InvalidDataException("ragioneSociale is a required property for ClienteV2 and cannot be null");
            }
            else
            {
                this.RagioneSociale = ragioneSociale;
            }
        }
        
        /// <summary>
        /// Gets or Sets Identificativo
        /// </summary>
        [DataMember(Name="identificativo", EmitDefaultValue=false)]
        public string Identificativo { get; set; }

        /// <summary>
        /// Gets or Sets Partitaiva
        /// </summary>
        [DataMember(Name="partitaiva", EmitDefaultValue=false)]
        public string Partitaiva { get; set; }

        /// <summary>
        /// Gets or Sets RagioneSociale
        /// </summary>
        [DataMember(Name="ragioneSociale", EmitDefaultValue=false)]
        public string RagioneSociale { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ClienteV2 {\n");
            sb.Append("  Identificativo: ").Append(Identificativo).Append("\n");
            sb.Append("  Partitaiva: ").Append(Partitaiva).Append("\n");
            sb.Append("  RagioneSociale: ").Append(RagioneSociale).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ClienteV2);
        }

        /// <summary>
        /// Returns true if ClienteV2 instances are equal
        /// </summary>
        /// <param name="input">Instance of ClienteV2 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ClienteV2 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Identificativo == input.Identificativo ||
                    (this.Identificativo != null &&
                    this.Identificativo.Equals(input.Identificativo))
                ) && 
                (
                    this.Partitaiva == input.Partitaiva ||
                    (this.Partitaiva != null &&
                    this.Partitaiva.Equals(input.Partitaiva))
                ) && 
                (
                    this.RagioneSociale == input.RagioneSociale ||
                    (this.RagioneSociale != null &&
                    this.RagioneSociale.Equals(input.RagioneSociale))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Identificativo != null)
                    hashCode = hashCode * 59 + this.Identificativo.GetHashCode();
                if (this.Partitaiva != null)
                    hashCode = hashCode * 59 + this.Partitaiva.GetHashCode();
                if (this.RagioneSociale != null)
                    hashCode = hashCode * 59 + this.RagioneSociale.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
