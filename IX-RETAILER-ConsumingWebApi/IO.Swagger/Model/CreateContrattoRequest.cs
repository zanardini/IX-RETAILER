/* 
 * Contratti API V2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// CreateContrattoRequest
    /// </summary>
    [DataContract]
    public partial class CreateContrattoRequest :  IEquatable<CreateContrattoRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateContrattoRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateContrattoRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateContrattoRequest" /> class.
        /// </summary>
        /// <param name="descrizione">descrizione (required).</param>
        /// <param name="externalId">externalId.</param>
        /// <param name="identificativoRivenditore">identificativoRivenditore (required).</param>
        /// <param name="identificativoDistributore">identificativoDistributore (required).</param>
        public CreateContrattoRequest(string descrizione = default(string), string externalId = default(string), string identificativoRivenditore = default(string), string identificativoDistributore = default(string))
        {
            // to ensure "descrizione" is required (not null)
            if (descrizione == null)
            {
                throw new InvalidDataException("descrizione is a required property for CreateContrattoRequest and cannot be null");
            }
            else
            {
                this.Descrizione = descrizione;
            }
            // to ensure "identificativoRivenditore" is required (not null)
            if (identificativoRivenditore == null)
            {
                throw new InvalidDataException("identificativoRivenditore is a required property for CreateContrattoRequest and cannot be null");
            }
            else
            {
                this.IdentificativoRivenditore = identificativoRivenditore;
            }
            // to ensure "identificativoDistributore" is required (not null)
            if (identificativoDistributore == null)
            {
                throw new InvalidDataException("identificativoDistributore is a required property for CreateContrattoRequest and cannot be null");
            }
            else
            {
                this.IdentificativoDistributore = identificativoDistributore;
            }
            this.ExternalId = externalId;
        }
        
        /// <summary>
        /// Gets or Sets Descrizione
        /// </summary>
        [DataMember(Name="descrizione", EmitDefaultValue=false)]
        public string Descrizione { get; set; }

        /// <summary>
        /// Gets or Sets ExternalId
        /// </summary>
        [DataMember(Name="externalId", EmitDefaultValue=false)]
        public string ExternalId { get; set; }

        /// <summary>
        /// Gets or Sets IdentificativoRivenditore
        /// </summary>
        [DataMember(Name="identificativoRivenditore", EmitDefaultValue=false)]
        public string IdentificativoRivenditore { get; set; }

        /// <summary>
        /// Gets or Sets IdentificativoDistributore
        /// </summary>
        [DataMember(Name="identificativoDistributore", EmitDefaultValue=false)]
        public string IdentificativoDistributore { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateContrattoRequest {\n");
            sb.Append("  Descrizione: ").Append(Descrizione).Append("\n");
            sb.Append("  ExternalId: ").Append(ExternalId).Append("\n");
            sb.Append("  IdentificativoRivenditore: ").Append(IdentificativoRivenditore).Append("\n");
            sb.Append("  IdentificativoDistributore: ").Append(IdentificativoDistributore).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CreateContrattoRequest);
        }

        /// <summary>
        /// Returns true if CreateContrattoRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of CreateContrattoRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateContrattoRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Descrizione == input.Descrizione ||
                    (this.Descrizione != null &&
                    this.Descrizione.Equals(input.Descrizione))
                ) && 
                (
                    this.ExternalId == input.ExternalId ||
                    (this.ExternalId != null &&
                    this.ExternalId.Equals(input.ExternalId))
                ) && 
                (
                    this.IdentificativoRivenditore == input.IdentificativoRivenditore ||
                    (this.IdentificativoRivenditore != null &&
                    this.IdentificativoRivenditore.Equals(input.IdentificativoRivenditore))
                ) && 
                (
                    this.IdentificativoDistributore == input.IdentificativoDistributore ||
                    (this.IdentificativoDistributore != null &&
                    this.IdentificativoDistributore.Equals(input.IdentificativoDistributore))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Descrizione != null)
                    hashCode = hashCode * 59 + this.Descrizione.GetHashCode();
                if (this.ExternalId != null)
                    hashCode = hashCode * 59 + this.ExternalId.GetHashCode();
                if (this.IdentificativoRivenditore != null)
                    hashCode = hashCode * 59 + this.IdentificativoRivenditore.GetHashCode();
                if (this.IdentificativoDistributore != null)
                    hashCode = hashCode * 59 + this.IdentificativoDistributore.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
