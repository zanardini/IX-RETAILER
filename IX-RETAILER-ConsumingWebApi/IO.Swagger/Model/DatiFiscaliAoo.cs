/* 
 * Contratti API V1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// DatiFiscaliAoo
    /// </summary>
    [DataContract]
    public partial class DatiFiscaliAoo :  IEquatable<DatiFiscaliAoo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DatiFiscaliAoo" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected DatiFiscaliAoo() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="DatiFiscaliAoo" /> class.
        /// </summary>
        /// <param name="codiceFiscale">codiceFiscale.</param>
        /// <param name="registroImprese">registroImprese.</param>
        /// <param name="rea">rea (required).</param>
        /// <param name="emailPec">emailPec (required).</param>
        public DatiFiscaliAoo(string codiceFiscale = default(string), string registroImprese = default(string), string rea = default(string), string emailPec = default(string))
        {
            // to ensure "rea" is required (not null)
            if (rea == null)
            {
                throw new InvalidDataException("rea is a required property for DatiFiscaliAoo and cannot be null");
            }
            else
            {
                this.Rea = rea;
            }
            // to ensure "emailPec" is required (not null)
            if (emailPec == null)
            {
                throw new InvalidDataException("emailPec is a required property for DatiFiscaliAoo and cannot be null");
            }
            else
            {
                this.EmailPec = emailPec;
            }
            this.CodiceFiscale = codiceFiscale;
            this.RegistroImprese = registroImprese;
        }
        
        /// <summary>
        /// Gets or Sets CodiceFiscale
        /// </summary>
        [DataMember(Name="codiceFiscale", EmitDefaultValue=false)]
        public string CodiceFiscale { get; set; }

        /// <summary>
        /// Gets or Sets RegistroImprese
        /// </summary>
        [DataMember(Name="registroImprese", EmitDefaultValue=false)]
        public string RegistroImprese { get; set; }

        /// <summary>
        /// Gets or Sets Rea
        /// </summary>
        [DataMember(Name="rea", EmitDefaultValue=false)]
        public string Rea { get; set; }

        /// <summary>
        /// Gets or Sets EmailPec
        /// </summary>
        [DataMember(Name="emailPec", EmitDefaultValue=false)]
        public string EmailPec { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DatiFiscaliAoo {\n");
            sb.Append("  CodiceFiscale: ").Append(CodiceFiscale).Append("\n");
            sb.Append("  RegistroImprese: ").Append(RegistroImprese).Append("\n");
            sb.Append("  Rea: ").Append(Rea).Append("\n");
            sb.Append("  EmailPec: ").Append(EmailPec).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DatiFiscaliAoo);
        }

        /// <summary>
        /// Returns true if DatiFiscaliAoo instances are equal
        /// </summary>
        /// <param name="input">Instance of DatiFiscaliAoo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DatiFiscaliAoo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodiceFiscale == input.CodiceFiscale ||
                    (this.CodiceFiscale != null &&
                    this.CodiceFiscale.Equals(input.CodiceFiscale))
                ) && 
                (
                    this.RegistroImprese == input.RegistroImprese ||
                    (this.RegistroImprese != null &&
                    this.RegistroImprese.Equals(input.RegistroImprese))
                ) && 
                (
                    this.Rea == input.Rea ||
                    (this.Rea != null &&
                    this.Rea.Equals(input.Rea))
                ) && 
                (
                    this.EmailPec == input.EmailPec ||
                    (this.EmailPec != null &&
                    this.EmailPec.Equals(input.EmailPec))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodiceFiscale != null)
                    hashCode = hashCode * 59 + this.CodiceFiscale.GetHashCode();
                if (this.RegistroImprese != null)
                    hashCode = hashCode * 59 + this.RegistroImprese.GetHashCode();
                if (this.Rea != null)
                    hashCode = hashCode * 59 + this.Rea.GetHashCode();
                if (this.EmailPec != null)
                    hashCode = hashCode * 59 + this.EmailPec.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // CodiceFiscale (string) maxLength
            if(this.CodiceFiscale != null && this.CodiceFiscale.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CodiceFiscale, length must be less than 255.", new [] { "CodiceFiscale" });
            }

            // CodiceFiscale (string) minLength
            if(this.CodiceFiscale != null && this.CodiceFiscale.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CodiceFiscale, length must be greater than 0.", new [] { "CodiceFiscale" });
            }

            // RegistroImprese (string) maxLength
            if(this.RegistroImprese != null && this.RegistroImprese.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for RegistroImprese, length must be less than 255.", new [] { "RegistroImprese" });
            }

            // RegistroImprese (string) minLength
            if(this.RegistroImprese != null && this.RegistroImprese.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for RegistroImprese, length must be greater than 0.", new [] { "RegistroImprese" });
            }

            // Rea (string) maxLength
            if(this.Rea != null && this.Rea.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Rea, length must be less than 255.", new [] { "Rea" });
            }

            // Rea (string) minLength
            if(this.Rea != null && this.Rea.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Rea, length must be greater than 0.", new [] { "Rea" });
            }

            // EmailPec (string) maxLength
            if(this.EmailPec != null && this.EmailPec.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for EmailPec, length must be less than 255.", new [] { "EmailPec" });
            }

            // EmailPec (string) minLength
            if(this.EmailPec != null && this.EmailPec.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for EmailPec, length must be greater than 0.", new [] { "EmailPec" });
            }

            yield break;
        }
    }

}
