/* 
 * Contratti API V1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EsigibilitaIva
    /// </summary>
    [DataContract]
    public partial class EsigibilitaIva :  IEquatable<EsigibilitaIva>, IValidatableObject
    {
        /// <summary>
        /// Defines Esigibilita
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum EsigibilitaEnum
        {
            
            /// <summary>
            /// Enum DIFFERITA for value: DIFFERITA
            /// </summary>
            [EnumMember(Value = "DIFFERITA")]
            DIFFERITA = 1,
            
            /// <summary>
            /// Enum IMMEDIATA for value: IMMEDIATA
            /// </summary>
            [EnumMember(Value = "IMMEDIATA")]
            IMMEDIATA = 2,
            
            /// <summary>
            /// Enum SCISSIONEPAGAMENTI for value: SCISSIONE_PAGAMENTI
            /// </summary>
            [EnumMember(Value = "SCISSIONE_PAGAMENTI")]
            SCISSIONEPAGAMENTI = 3
        }

        /// <summary>
        /// Gets or Sets Esigibilita
        /// </summary>
        [DataMember(Name="esigibilita", EmitDefaultValue=false)]
        public EsigibilitaEnum Esigibilita { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="EsigibilitaIva" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EsigibilitaIva() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EsigibilitaIva" /> class.
        /// </summary>
        /// <param name="esigibilita">esigibilita (required).</param>
        /// <param name="descrizione">descrizione (required).</param>
        public EsigibilitaIva(EsigibilitaEnum esigibilita = default(EsigibilitaEnum), string descrizione = default(string))
        {
            // to ensure "esigibilita" is required (not null)
            if (esigibilita == null)
            {
                throw new InvalidDataException("esigibilita is a required property for EsigibilitaIva and cannot be null");
            }
            else
            {
                this.Esigibilita = esigibilita;
            }
            // to ensure "descrizione" is required (not null)
            if (descrizione == null)
            {
                throw new InvalidDataException("descrizione is a required property for EsigibilitaIva and cannot be null");
            }
            else
            {
                this.Descrizione = descrizione;
            }
        }
        

        /// <summary>
        /// Gets or Sets Descrizione
        /// </summary>
        [DataMember(Name="descrizione", EmitDefaultValue=false)]
        public string Descrizione { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EsigibilitaIva {\n");
            sb.Append("  Esigibilita: ").Append(Esigibilita).Append("\n");
            sb.Append("  Descrizione: ").Append(Descrizione).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EsigibilitaIva);
        }

        /// <summary>
        /// Returns true if EsigibilitaIva instances are equal
        /// </summary>
        /// <param name="input">Instance of EsigibilitaIva to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EsigibilitaIva input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Esigibilita == input.Esigibilita ||
                    (this.Esigibilita != null &&
                    this.Esigibilita.Equals(input.Esigibilita))
                ) && 
                (
                    this.Descrizione == input.Descrizione ||
                    (this.Descrizione != null &&
                    this.Descrizione.Equals(input.Descrizione))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Esigibilita != null)
                    hashCode = hashCode * 59 + this.Esigibilita.GetHashCode();
                if (this.Descrizione != null)
                    hashCode = hashCode * 59 + this.Descrizione.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
