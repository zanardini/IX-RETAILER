/* 
 * Contratti API V1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ResponsabileConservazioneInfo
    /// </summary>
    [DataContract]
    public partial class ResponsabileConservazioneInfo :  IEquatable<ResponsabileConservazioneInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ResponsabileConservazioneInfo" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ResponsabileConservazioneInfo() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ResponsabileConservazioneInfo" /> class.
        /// </summary>
        /// <param name="nome">nome (required).</param>
        /// <param name="cognome">cognome (required).</param>
        /// <param name="codiceFiscale">codiceFiscale (required).</param>
        /// <param name="cittadinanza">cittadinanza (required).</param>
        public ResponsabileConservazioneInfo(string nome = default(string), string cognome = default(string), string codiceFiscale = default(string), string cittadinanza = default(string))
        {
            // to ensure "nome" is required (not null)
            if (nome == null)
            {
                throw new InvalidDataException("nome is a required property for ResponsabileConservazioneInfo and cannot be null");
            }
            else
            {
                this.Nome = nome;
            }
            // to ensure "cognome" is required (not null)
            if (cognome == null)
            {
                throw new InvalidDataException("cognome is a required property for ResponsabileConservazioneInfo and cannot be null");
            }
            else
            {
                this.Cognome = cognome;
            }
            // to ensure "codiceFiscale" is required (not null)
            if (codiceFiscale == null)
            {
                throw new InvalidDataException("codiceFiscale is a required property for ResponsabileConservazioneInfo and cannot be null");
            }
            else
            {
                this.CodiceFiscale = codiceFiscale;
            }
            // to ensure "cittadinanza" is required (not null)
            if (cittadinanza == null)
            {
                throw new InvalidDataException("cittadinanza is a required property for ResponsabileConservazioneInfo and cannot be null");
            }
            else
            {
                this.Cittadinanza = cittadinanza;
            }
        }
        
        /// <summary>
        /// Gets or Sets Nome
        /// </summary>
        [DataMember(Name="nome", EmitDefaultValue=false)]
        public string Nome { get; set; }

        /// <summary>
        /// Gets or Sets Cognome
        /// </summary>
        [DataMember(Name="cognome", EmitDefaultValue=false)]
        public string Cognome { get; set; }

        /// <summary>
        /// Gets or Sets CodiceFiscale
        /// </summary>
        [DataMember(Name="codiceFiscale", EmitDefaultValue=false)]
        public string CodiceFiscale { get; set; }

        /// <summary>
        /// Gets or Sets Cittadinanza
        /// </summary>
        [DataMember(Name="cittadinanza", EmitDefaultValue=false)]
        public string Cittadinanza { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ResponsabileConservazioneInfo {\n");
            sb.Append("  Nome: ").Append(Nome).Append("\n");
            sb.Append("  Cognome: ").Append(Cognome).Append("\n");
            sb.Append("  CodiceFiscale: ").Append(CodiceFiscale).Append("\n");
            sb.Append("  Cittadinanza: ").Append(Cittadinanza).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ResponsabileConservazioneInfo);
        }

        /// <summary>
        /// Returns true if ResponsabileConservazioneInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of ResponsabileConservazioneInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ResponsabileConservazioneInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Nome == input.Nome ||
                    (this.Nome != null &&
                    this.Nome.Equals(input.Nome))
                ) && 
                (
                    this.Cognome == input.Cognome ||
                    (this.Cognome != null &&
                    this.Cognome.Equals(input.Cognome))
                ) && 
                (
                    this.CodiceFiscale == input.CodiceFiscale ||
                    (this.CodiceFiscale != null &&
                    this.CodiceFiscale.Equals(input.CodiceFiscale))
                ) && 
                (
                    this.Cittadinanza == input.Cittadinanza ||
                    (this.Cittadinanza != null &&
                    this.Cittadinanza.Equals(input.Cittadinanza))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Nome != null)
                    hashCode = hashCode * 59 + this.Nome.GetHashCode();
                if (this.Cognome != null)
                    hashCode = hashCode * 59 + this.Cognome.GetHashCode();
                if (this.CodiceFiscale != null)
                    hashCode = hashCode * 59 + this.CodiceFiscale.GetHashCode();
                if (this.Cittadinanza != null)
                    hashCode = hashCode * 59 + this.Cittadinanza.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Nome (string) maxLength
            if(this.Nome != null && this.Nome.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Nome, length must be less than 255.", new [] { "Nome" });
            }

            // Nome (string) minLength
            if(this.Nome != null && this.Nome.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Nome, length must be greater than 0.", new [] { "Nome" });
            }

            // Cognome (string) maxLength
            if(this.Cognome != null && this.Cognome.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Cognome, length must be less than 255.", new [] { "Cognome" });
            }

            // Cognome (string) minLength
            if(this.Cognome != null && this.Cognome.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Cognome, length must be greater than 0.", new [] { "Cognome" });
            }

            // CodiceFiscale (string) maxLength
            if(this.CodiceFiscale != null && this.CodiceFiscale.Length > 16)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CodiceFiscale, length must be less than 16.", new [] { "CodiceFiscale" });
            }

            // CodiceFiscale (string) minLength
            if(this.CodiceFiscale != null && this.CodiceFiscale.Length < 16)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CodiceFiscale, length must be greater than 16.", new [] { "CodiceFiscale" });
            }

            // Cittadinanza (string) maxLength
            if(this.Cittadinanza != null && this.Cittadinanza.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Cittadinanza, length must be less than 255.", new [] { "Cittadinanza" });
            }

            // Cittadinanza (string) minLength
            if(this.Cittadinanza != null && this.Cittadinanza.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Cittadinanza, length must be greater than 0.", new [] { "Cittadinanza" });
            }

            yield break;
        }
    }

}
