/* 
 * Contratti API V2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// StatoContrattoResponse
    /// </summary>
    [DataContract]
    public partial class StatoContrattoResponse :  IEquatable<StatoContrattoResponse>, IValidatableObject
    {
        /// <summary>
        /// Defines Stato
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatoEnum
        {
            
            /// <summary>
            /// Enum INELABORAZIONE for value: IN_ELABORAZIONE
            /// </summary>
            [EnumMember(Value = "IN_ELABORAZIONE")]
            INELABORAZIONE = 1,
            
            /// <summary>
            /// Enum INERRORE for value: IN_ERRORE
            /// </summary>
            [EnumMember(Value = "IN_ERRORE")]
            INERRORE = 2,
            
            /// <summary>
            /// Enum ATTESARISCONTRO for value: ATTESA_RISCONTRO
            /// </summary>
            [EnumMember(Value = "ATTESA_RISCONTRO")]
            ATTESARISCONTRO = 3,
            
            /// <summary>
            /// Enum CONTROFIRMATO for value: CONTROFIRMATO
            /// </summary>
            [EnumMember(Value = "CONTROFIRMATO")]
            CONTROFIRMATO = 4,
            
            /// <summary>
            /// Enum ANNULLATO for value: ANNULLATO
            /// </summary>
            [EnumMember(Value = "ANNULLATO")]
            ANNULLATO = 5,
            
            /// <summary>
            /// Enum ATTIVATO for value: ATTIVATO
            /// </summary>
            [EnumMember(Value = "ATTIVATO")]
            ATTIVATO = 6,
            
            /// <summary>
            /// Enum RIAPERTO for value: RIAPERTO
            /// </summary>
            [EnumMember(Value = "RIAPERTO")]
            RIAPERTO = 7
        }

        /// <summary>
        /// Gets or Sets Stato
        /// </summary>
        [DataMember(Name="stato", EmitDefaultValue=false)]
        public StatoEnum Stato { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="StatoContrattoResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected StatoContrattoResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="StatoContrattoResponse" /> class.
        /// </summary>
        /// <param name="stato">stato (required).</param>
        public StatoContrattoResponse(StatoEnum stato = default(StatoEnum))
        {
            // to ensure "stato" is required (not null)
            if (stato == null)
            {
                throw new InvalidDataException("stato is a required property for StatoContrattoResponse and cannot be null");
            }
            else
            {
                this.Stato = stato;
            }
        }
        

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StatoContrattoResponse {\n");
            sb.Append("  Stato: ").Append(Stato).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StatoContrattoResponse);
        }

        /// <summary>
        /// Returns true if StatoContrattoResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of StatoContrattoResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StatoContrattoResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Stato == input.Stato ||
                    (this.Stato != null &&
                    this.Stato.Equals(input.Stato))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Stato != null)
                    hashCode = hashCode * 59 + this.Stato.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
