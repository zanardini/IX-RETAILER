/* 
 * Contratti API V1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// UpdateRagioneSocialeAooRequest
    /// </summary>
    [DataContract]
    public partial class UpdateRagioneSocialeAooRequest :  IEquatable<UpdateRagioneSocialeAooRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateRagioneSocialeAooRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UpdateRagioneSocialeAooRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateRagioneSocialeAooRequest" /> class.
        /// </summary>
        /// <param name="ragioneSociale">ragioneSociale (required).</param>
        public UpdateRagioneSocialeAooRequest(string ragioneSociale = default(string))
        {
            // to ensure "ragioneSociale" is required (not null)
            if (ragioneSociale == null)
            {
                throw new InvalidDataException("ragioneSociale is a required property for UpdateRagioneSocialeAooRequest and cannot be null");
            }
            else
            {
                this.RagioneSociale = ragioneSociale;
            }
        }
        
        /// <summary>
        /// Gets or Sets RagioneSociale
        /// </summary>
        [DataMember(Name="RagioneSociale", EmitDefaultValue=false)]
        public string RagioneSociale { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UpdateRagioneSocialeAooRequest {\n");
            sb.Append("  RagioneSociale: ").Append(RagioneSociale).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UpdateRagioneSocialeAooRequest);
        }

        /// <summary>
        /// Returns true if UpdateRagioneSocialeAooRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of UpdateRagioneSocialeAooRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UpdateRagioneSocialeAooRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.RagioneSociale == input.RagioneSociale ||
                    (this.RagioneSociale != null &&
                    this.RagioneSociale.Equals(input.RagioneSociale))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RagioneSociale != null)
                    hashCode = hashCode * 59 + this.RagioneSociale.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // RagioneSociale (string) maxLength
            if(this.RagioneSociale != null && this.RagioneSociale.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for RagioneSociale, length must be less than 255.", new [] { "RagioneSociale" });
            }

            // RagioneSociale (string) minLength
            if(this.RagioneSociale != null && this.RagioneSociale.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for RagioneSociale, length must be greater than 0.", new [] { "RagioneSociale" });
            }

            yield break;
        }
    }

}
